{"version":3,"sources":["img/avocado.png","config/config.js","reducers/auth.js","actions/types.js","reducers/index.js","store.js","actions/auth.js","Login.jsx","Headbar.jsx","Posts.jsx","Home.jsx","App.jsx","Form.jsx","Post.jsx","Routs.jsx","index.jsx"],"names":["module","exports","SERVER","initialState","login","user","reducer","state","action","type","console","log","payload","update","$set","rootReducer","combineReducers","auth","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","status","stat","dispatch","Login","props","logOut","setState","LogOn","password","loginOnOff","this","username","className","onClick","Component","connect","statusLogin","Headbar","to","style","textDecoration","src","logo","alt","db","Localbase","Posts","postDelete","id","axios","delete","posts","length","newposts","filter","i","_id","author","bind","get","then","res","data","collection","set","slice","reverse","map","post","key","date","title","content","pathname","Home","loginTryOn","pas","headers","dta","param","setTimeout","name","regTry","maxLength","ref","placeholder","required","value","App","addForm","validate","handleChange","handleSubmit","event","target","preventDefault","Date","toLocaleTimeString","hour","minute","toLocaleDateString","push","onSubmit","onChange","Post","redir","renderPost","a","location","Routs","path","component","Form","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52c34a7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avocado.3951c08c.png\";","module.exports = {\r\n\r\n    SERVER: \"http://localhost:3001\"\r\n    \r\n}","import  update   from 'immutability-helper';\r\nimport { AUTH_ON_OFF } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    login: '',\r\n    user: '',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const { type } = action;\r\n    console.log('ACTION', action.payload);\r\n\r\n    switch (type){\r\n        case AUTH_ON_OFF:\r\n            return update(state, {\r\n                login: { $set: action.payload.login },\r\n                user: { $set: action.payload.user },\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n       \r\n}\r\n\r\nexport default reducer;","export const AUTH_ON_OFF = 'AUTH_ON_OFF';","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nconst rootReducer = combineReducers(\r\n        {\r\n            auth,\r\n        }\r\n);\r\n    \r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n","//import { startSession } from 'mongoose';\r\nimport { AUTH_ON_OFF } from './types';\r\n\r\nconst status = (stat) => (dispatch) =>{\r\n    dispatch({\r\n    type: AUTH_ON_OFF,\r\n    payload: {\r\n        login: stat.login,\r\n        user: stat.user,\r\n    }        \r\n    });\r\n\r\n}\r\n\r\nexport {status}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { status as statusLogin } from './actions/auth';\r\nimport \"./Login.css\";\r\n\r\n\r\nclass Login extends Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            LogOn: false,\r\n            user: '',\r\n            login: '',\r\n            password: '',\r\n            status: ''\r\n        };\r\n    }\r\n    logOut = () => {\r\n        this.setState({ LogOn: false, user: '', status: '' });\r\n        this.props.status({ login: false, user: '' })\r\n    }\r\n\r\n    render() {\r\n        const { loginOnOff } = this.props;\r\n        const { username } = this.props;\r\n        return (\r\n            <div className=\"back-login\">\r\n                { loginOnOff ?\r\n                    <div className=\"userplate\">\r\n                        <div className=\"userplate-name\">{username}</div>\r\n                        <button className=\"userplate-btn\"\r\n                            onClick={() => this.logOut()}\r\n                        >logout</button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loginOnOff: state.auth.login,\r\n    username: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    status: (stat) => dispatch(statusLogin(stat))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n\r\n","import React, { Component } from \"react\";  \r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport logo from './img/avocado.png'\r\nimport Login from \"./Login\";\r\nimport \"./Headbar.css\";\r\n\r\nclass Headbar extends Component {\r\n  \r\n  render() {   \r\n    const { loginOnOff } = this.props;\r\n    return (\r\n      <div className= \"back\">\r\n      { loginOnOff ?  \r\n      <div className= \"btn-div\">\r\n        <Link to=\"/\" className = \"link\" style={{ textDecoration: 'none' }}>\r\n              <button type=\"button\" className = \"button\">\r\n                Home\r\n              </button>\r\n        </Link> \r\n        <Link to=\"/newpost\" className = \"link\" style={{ textDecoration: 'none' }}>\r\n               <button type=\"button\" className = \"button\">\r\n                New post\r\n              </button>\r\n        </Link>\r\n      </div>\r\n      : <div className = \"img-div\"> \r\n            <img src= { logo } alt=\"Avocato Cat\"/> \r\n        <div className = \"title-div\">\r\n            Avocato Blog\r\n        </div>\r\n        </div> \r\n      }\r\n        <Login />\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>  ({\r\n  loginOnOff: state.auth.login\r\n});\r\n\r\nexport default connect (mapStateToProps)(Headbar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { status as statusLogin } from './actions/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport Localbase from 'localbase';\r\nimport axios from 'axios';\r\nimport {SERVER} from \"./config/config\";\r\nimport \"./Posts.css\";\r\n\r\nlet db = new Localbase('blog');\r\n\r\nclass Posts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      id: '',\r\n      LogOn: false,\r\n      user: '',\r\n      login: '',\r\n      password: '',\r\n      status: '',\r\n      author: ''\r\n    };\r\n    //this.regTry = this.regTry.bind(this);\r\n    this.postDelete = this.postDelete.bind(this);\r\n  }\r\n\r\n  postDelete = (id) => {\r\n    axios.delete(`${SERVER}/api/post/${id}`, { id });\r\n    if (this.state.posts.length >= 0) {\r\n      const oldposts = this.state.posts;\r\n      const newposts = oldposts.filter(i => i._id !== id);\r\n      this.setState({ posts: newposts });\r\n    }\r\n  }\r\n\r\n /* loginTryOn = (log, pas) => {\r\n    if (log === '' || pas === '') {\r\n      this.setState({ status: 'Заполните все поля' })\r\n    }else {\r\n      axios.get(`${SERVER}/api/login/`, { headers: { log: log, pas: pas } })\r\n      .then(dta => dta.data)\r\n      .then(param => {\r\n          this.setState(param);\r\n          setTimeout(() => this.setState({ status: '' }), 2000);\r\n          this.props.status({ login: param.LogOn, user: param.user });\r\n          db.collection('dbUser').set([{ auth: param.LogOn, name: param.user }]).then(console.log(\"DB user из логина\"));\r\n          axios.get(`${SERVER}/api/posts/${this.props.username}`)\r\n            .then(res => res.data)\r\n            .then(posts => this.setState({posts})   \r\n        )})\r\n    }\r\n  }\r\n\r\n  regTry = (log, pas) => {\r\n    if (log === '' || pas === '') {\r\n      this.setState({ status: 'Заполните все поля' })\r\n    } else if (log.length > 10 || pas.length > 10) {\r\n      this.setState({ status: 'Логин и пароль должны быть не длиннее 10 символов' })\r\n    } else {\r\n      axios.post(`${SERVER}/api/login/`, { log, pas })\r\n        .then(dta => {\r\n          this.setState(dta.data);\r\n          setTimeout(() => this.setState({ status: '' }), 2000);\r\n        })\r\n    }\r\n  }*/\r\n\r\n  componentDidMount() {\r\n    console.log('в постс');\r\n    if (this.state.posts.length >= 0) {\r\n      axios.get(`${SERVER}/api/posts/${this.props.username}`)\r\n        .then(res => res.data)\r\n        .then(posts => {\r\n          this.setState({ posts })\r\n          db.collection('dbPosts').set( posts );\r\n          //db.collection('dbPosts').get().then( dbPosts => {console.log(\"вся база:  \", dbPosts )});\r\n        }\r\n        );\r\n    }\r\n  }\r\n  render() {\r\n    const { loginOnOff } = this.props;\r\n    const { username } = this.props;\r\n    return (\r\n      <div className=\"pole\">\r\n        { loginOnOff ?\r\n          <div className=\"Posts\" >\r\n            {this.state.posts.slice(0).reverse().map(post =>\r\n              <div key={post.id} className=\"wrapper-posts\">\r\n                <div className=\"nameplate-posts-div\">\r\n                  <div className=\"nameplate-posts\">\r\n                    <b>Date:</b> &nbsp; {post.date}\r\n                  </div>\r\n                  <div className=\"nameplate-posts\">\r\n                    <b>Titile:</b> &nbsp; {post.title}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-pole-posts\">\r\n                  {post.content}\r\n                </div>\r\n                <div className=\"button-div\">\r\n                  <button\r\n                    onClick={() => { this.postDelete(post._id) }}\r\n                    className=\"delete-posts\"\r\n                    type=\"submit\"\r\n                  > delete\r\n                </button>\r\n                  <Link to={{\r\n                    pathname: `api/posts/${post._id}`,\r\n                    state: { id: post._id }\r\n                  }} className=\"detail-posts\" > detail </ Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          : null /*<form className=\"login-div\">\r\n            <input\r\n              className=\"login\"\r\n              name=\"login\"\r\n              maxLength=\"15\"\r\n              ref={ref => this.login = ref}\r\n              type=\"text\"\r\n              placeholder=\"login\"\r\n              required />\r\n            <button\r\n              onClick={() => {\r\n                const log = `${this.login.value}`\r\n                const pas = `${this.password.value}`\r\n                this.loginTryOn(log, pas)\r\n              }}\r\n              type=\"button\"\r\n              className=\"login-button\"\r\n            > login </button>\r\n            <input\r\n              className=\"password\"\r\n              name=\"password\"\r\n              maxLength=\"15\"\r\n              ref={ref => this.password = ref}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              required />\r\n            <button\r\n              onClick={() => {\r\n                const log = `${this.login.value}`\r\n                const pas = `${this.password.value}`\r\n                this.regTry(log, pas)\r\n              }}\r\n              type=\"button\"\r\n              className=\"reg-button\"\r\n            > register</button>\r\n            <div className=\"status\">{this.state.status}</div>\r\n          </form>*/\r\n        }\r\n      </div>\r\n    );\r\n\r\n  };\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loginOnOff: state.auth.login,\r\n  username: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  status: (stat) => dispatch(statusLogin(stat))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { status as statusLogin } from './actions/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport Localbase from 'localbase';\r\nimport axios from 'axios';\r\nimport Posts from './Posts';\r\nimport {SERVER} from \"./config/config\";\r\n\r\nlet db = new Localbase('blog');\r\n\r\nclass Home extends Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            LogOn: false,\r\n            user: '',\r\n            login: '',\r\n            password: '',\r\n            status: ''\r\n        };\r\n    }\r\n    loginTryOn = (log, pas) => {\r\n        if (log === '' || pas === '') {\r\n          this.setState({ status: 'Заполните все поля' })\r\n        }else {\r\n          axios.get(`${SERVER}/api/login/`, { headers: { log: log, pas: pas } })\r\n          .then(dta => dta.data)\r\n          .then(param => {\r\n              this.setState(param);\r\n              setTimeout(() => this.setState({ status: '' }), 2000);\r\n              this.props.status({ login: param.LogOn, user: param.user });\r\n              console.log(\"login удачный, в редаксе: \", this.props.username )\r\n              db.collection('dbUser').set([{ auth: param.LogOn, name: param.user }]).then(console.log(\"DB user из логина\"));\r\n              //axios.get(`${SERVER}/api/posts/${this.props.username}`)\r\n                //.then(res => res.data)\r\n                //.then(posts => this.setState({posts})   \r\n          })\r\n        }\r\n      }\r\n    \r\n      regTry = (log, pas) => {\r\n        if (log === '' || pas === '') {\r\n          this.setState({ status: 'Заполните все поля' })\r\n        } else if (log.length > 10 || pas.length > 10) {\r\n          this.setState({ status: 'Логин и пароль должны быть не длиннее 10 символов' })\r\n        } else {\r\n          axios.post(`${SERVER}/api/login/`, { log, pas })\r\n            .then(dta => {\r\n              this.setState(dta.data);\r\n              setTimeout(() => this.setState({ status: '' }), 2000);\r\n            })\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { loginOnOff } = this.props;\r\n        const { username } = this.props;\r\n        return (\r\n          <div className=\"pole\">\r\n           { loginOnOff ?\r\n            <form className=\"login-div\">\r\n            <input\r\n              className=\"login\"\r\n              name=\"login\"\r\n              maxLength=\"15\"\r\n              ref={ref => this.login = ref}\r\n              type=\"text\"\r\n              placeholder=\"login\"\r\n              required />\r\n            <button\r\n              onClick={() => {\r\n                const log = `${this.login.value}`\r\n                const pas = `${this.password.value}`\r\n                this.loginTryOn(log, pas)\r\n              }}\r\n              type=\"button\"\r\n              className=\"login-button\"\r\n            > login </button>\r\n            <input\r\n              className=\"password\"\r\n              name=\"password\"\r\n              maxLength=\"15\"\r\n              ref={ref => this.password = ref}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              required />\r\n            <button\r\n              onClick={() => {\r\n                const log = `${this.login.value}`\r\n                const pas = `${this.password.value}`\r\n                this.regTry(log, pas)\r\n              }}\r\n              type=\"button\"\r\n              className=\"reg-button\"\r\n            > register</button>\r\n            <div className=\"status\">{this.state.status}</div>\r\n          </form>: < Posts />}\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    loginOnOff: state.auth.login,\r\n    username: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    status: (stat) => dispatch(statusLogin(stat))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","\nimport React from 'react';\nimport Headbar from './Headbar';\nimport Home from './Home';\n\n\nconst App = () => {\n    return (\n      <div>\n        <Headbar />\n        <Home />    \n      </div>\n    );\n  };\n\nexport default App;","import React, { Component } from \"react\";  \r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\nimport Headbar from \"./Headbar\";\r\nimport {SERVER} from \"./config/config\"\r\nimport \"./Form.css\";\r\n\r\nclass addForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n                  validate: false,\r\n                  author: '',\r\n                  date: '',\r\n                  title: '',\r\n                  content: ''\r\n                };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n       [event.target.name]: event.target.value\r\n      });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios.post(`${SERVER}/api/posts/`,{\r\n      author: this.state.author,\r\n      date: `${(new Date()).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) + \", \" + (new Date()).toLocaleDateString()}`,\r\n      title: this.state.title,\r\n      content: this.state.content,\r\n     });\r\n     this.setState ({   \r\n      author: '',\r\n      date: '',\r\n      title:'',\r\n      content: '',\r\n      validate: true\r\n     });\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    if (this.state.validate) {\r\n      axios.get(`${SERVER}/api/posts/${this.props.username}`)\r\n      .then(res => res.data)\r\n      .then(posts => this.setState({ posts }));\r\n    }\r\n  }\r\n  \r\n  render() {  \r\n    if (this.state.validate) {return <Redirect push to=\"/\" />}\r\n    const { username } = this.props;\r\n    this.state.author =  username;\r\n    return (\r\n      <div> \r\n        <Headbar />  \r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <input \r\n                 className= \"forminput\"\r\n                 name=\"title\"\r\n                 type=\"text\" \r\n                 value={this.state.title} \r\n                 onChange={this.handleChange} \r\n                 placeholder=\"title\"/>\r\n          <br/><br/>    \r\n          <textarea\r\n                 className = \"formtextpole\"\r\n                 name=\"content\"\r\n                 type=\"text\" \r\n                 value={this.state.content}  \r\n                 onChange={this.handleChange} \r\n                 title={\"Post text\"}\r\n                 />\r\n          <br/><br/> \r\n          <input \r\n                className= \"formButton\"\r\n                type=\"submit\" \r\n                value=\"send\" \r\n          />\r\n        </form>  \r\n      </div>\r\n\r\n    );  \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   username: state.auth.user,\r\n});\r\n\r\nexport default connect (mapStateToProps)(addForm);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Headbar from \"./Headbar\";\r\nimport {SERVER} from \"./config/config\"\r\nimport \"./Post.css\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n                  redir: false,\r\n                  author:'',\r\n                  date:'',\r\n                  title:'',\r\n                  content:''\r\n                };\r\n  this.postDelete = this.postDelete.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.renderPost();\r\n  }\r\n\r\n  postDelete = (id) => {\r\n    this.setState({redir: true});\r\n    axios.delete(`${SERVER}/api/post/${id}`, { id });\r\n    }\r\n  \r\n  renderPost = async() => {\r\n      console.log(this.props.location.state.id);\r\n      const id = this.props.location.state.id;\r\n      await axios.get(`${SERVER}/api/post/${id}`, {id})\r\n      .then(post => this.setState(post.data)); \r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    if (this.state.redir) {\r\n      axios.get(`${SERVER}/api/posts/${this.props.username}`)\r\n      .then(res => res.data)\r\n      .then(posts => this.setState({ posts }));\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    const { username } = this.props;\r\n    if (this.state.redir) { return <Redirect push to=\"/\" /> }  \r\n    return (\r\n      <div>\r\n        <Headbar />  \r\n        <div className = \"wrapper-post\">\r\n          <div className = \"nameplate-post-div\">\r\n            <div className = \"nameplate-post\">\r\n              <b>Date:</b> &nbsp; {this.state.date}\r\n            </div>\r\n            <div className = \"nameplate-post\">\r\n              <b>Title:</b> &nbsp; {this.state.title}\r\n            </div>\r\n            </div>\r\n            <div className = \"post-text-pole\">\r\n                {this.state.content}\r\n            </div>\r\n            <button\r\n                    onClick= { () => {this.postDelete(this.state._id)}}\r\n                    className = \"delete-post\"\r\n                    type = \"submit\"\r\n                    > delete               \r\n            </button>\r\n         </div>\r\n         </div>\r\n        )}\r\n      \r\n }     \r\n\r\n const mapStateToProps = state => ({\r\n  username: state.auth.user,\r\n});\r\n\r\nexport default connect (mapStateToProps)(Post);\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Form from './Form';\nimport Posts from './Posts';\nimport Post from './Post';\n\nconst Routs = () => {\n    return (\n      <section>\n        <Router> \n          <Switch>\n              <Route path=\"/newpost\" component={Form} />\n              <Route path=\"/posts\" component={Posts} />\n              <Route exact path=\"/\" component= {App} />\n              <Route path=\"/api/posts/\" component= {Post}  />        \n          </Switch>\n        </Router>     \n      </section>\n    );\n  };\n\n  export default Routs;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Routs from './Routs';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n      <Routs />\n  </React.StrictMode>\n  </Provider>, \n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}